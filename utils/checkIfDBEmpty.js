const { User } = require('../dataBase');
const {
    autoGeneratedAdmin: {
        adminAddress,
        adminEmail,
        adminName,
        adminPassword,
        adminPhone,
        adminRole,
        createdBySystem
    },
    emailActionsEnum: { ADMIN_CREATED },
    variables: {
        FRONTEND_URL,
        reset_path
    }
} = require('../config');
// падає error
// const {emailService: {sendMail}} = require('../services');
const { sendMail } = require('../services/emai.service');

module.exports = async function checkIfDBEmpty() {
    try {
        let newUser;

        const numberOfUsers = await User.count();

        if (!numberOfUsers) {
            newUser = await User.create({
                name: adminName,
                email: adminEmail,
                password: adminPassword,
                address: adminAddress,
                phone: adminPhone,
                role: adminRole,
            });

            // Пароль не хешую, фільтр на логіні не пропустить, перенаправить на зміну паролю.

            await sendMail(newUser.email, ADMIN_CREATED, {
                userName: newUser.name,
                adminName: createdBySystem,
                resetPassURL: `${FRONTEND_URL}${reset_path}send`
            });

            console.log('DataBase was empty, new record of administrator was created: ');
            console.log(newUser);
            console.log('Please, change password and renew data of administrator!');
        }
    } catch (error) {
        console.log(error);
    }
};

// Alternative option:

// const user = await User.findOne();
// if (!user) {
